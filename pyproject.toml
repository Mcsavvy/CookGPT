[tool.poetry]
name = "cookgpt"
version = "0.8.0"
description = "A Cooking Companion You Can't Refuse"
authors = ["Mcsavvy <davemcsavvii@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
openai = "0.27.8"
flask = "3.0.1"
dynaconf = "3.2.1"
flask-sqlalchemy = "3.0.5"
SQLAlchemy-serializer = "^1.4.1"
Flask-Migrate = "^4.0.5"
Flask-Cors = "^4.0.0"
APIFlask = "2.0.0"
pyjwt = "2.8.0"
flask-jwt-extended = "4.6.0"
mysqlclient = "2.2.0"
tiktoken = "^0.5.2"
celery = "^5.3.6"
langchain = "^0.1.4"
pydantic = "^2.5.3"
flask-caching = "^2.1.0"
sqlalchemy = "^2.0.25"
sentry-sdk = "^1.39.2"
redis = {extras = ["hiredis"], version = "^5.0.1"}
rich = "^13.7.0"
flask-admin = "^1.6.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"
pytest-flask = "^1.3.0"
pytest-cov = "^4.1.0"
ipdb = "^0.13.13"
coverage = "^7.4.1"
faker = "^22.5.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
ipython = "^8.20.0"
black = "^24.1.0"
mypy = "^1.8.0"
isort = "^5.13.2"
flask-shell-ipython = "^0.5.1"
gitchangelog = "^3.0.4"
ruff = "^0.1.14"
pre-commit = "^3.6.0"
pystache = "^0.6.5"
gunicorn = "^21.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py310"
exclude = [
    ".git",
    "__pycache__",
    "migrations",
    ".venv",
    ".vscode",
    ".ruff_cache",
    ".mypy_cache",
    ".pytest_cache",
]


[tool.ruff.lint]
select = [
    "E", "C", "I", "W", "F", "D",
    "N", "UP",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
indent-style = "space"

[tool.black]
line-length = 79
exclude = """
(
    \\.git
    | \\.mypy_cache
    | __pycache__
    | tests/old/.*
    | cookgpt/old/.*
    | migrations
    | .venv
)
"""

[tool.mypy]
ignore_missing_imports = true
warn_unused_configs = true
exclude = [
    "\\.git",
    "\\.mypy_cache",
    "__pycache__",
    "migrations/.*",
    "test_streaming.py",
    ".venv",
]

[tool.pytest.ini_options]
addopts = "-v -l --tb=short"
console_output_style = "progress"
testpaths = "tests"


[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@overload",
]
omit = [
    "migrations/*",
    "cookgpt/ext/cors.py",
    "cookgpt/ext/admin.py",
    "cookgpt/ext/database.py",
    "cookgpt/logging.py",
    "cookgpt/sentry.py",
    "cookgpt/auth/models/whatsapp.py",
    ".venv/*",
]

